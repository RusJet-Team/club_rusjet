## Version 2021/04/27 - Changelog: https://github.com/linuxserver/docker-swag/commits/master/root/defaults/default

# redirect all traffic to https
server {

    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
}

# main server block
server {

    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    keepalive_timeout          45;
    reset_timedout_connection  on;
    client_body_timeout        35;
    send_timeout               30;

    sendfile      on;
    aio           on;
    tcp_nopush    on;

    open_file_cache max=100000 inactive=20s;
    open_file_cache_valid 45s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    gzip                on;
    gzip_disable        "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 1100;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;

    server_name rusjet.com;

    include /config/nginx/ssl.conf;

    client_max_body_size 10M;

    location / {
        include /config/nginx/proxy.conf;
        set $upstream_app backend;
        set $upstream_port 8000;
        set $upstream_proto http;
        proxy_pass $upstream_proto://$upstream_app:$upstream_port;
    }

    location ~ ^/(static|media|(?:\d+|-)x(?:\d+|-))/.*\.(css|js|pdf|PDF|TXT|txt|json|svg|ttf|eot|less|woff|woff2|jpg|JPG|jpeg|JPEG|gif|GIF|png|PNG|webp|WEBP)$ {
        proxy_pass        http://127.0.0.1:9001;
        proxy_set_header Accept $http_accept;
        expires max;
    }
}

server {
    listen 9001;
    allow 127.0.0.1;
    deny all;

    root /config/;

    if ($uri ~ ^/(\d+|-)x(\d+|-)/) {
        set $w $1;
        set $h $2;
    }

    if ($http_accept ~* "webp") {
        rewrite ^(.*)\.(jpg|jpeg)$ $1.webp last;
    }

    location ~ ^/(?:\d+|-)x(?:\d+|-)/crop(/(static|media)/.*)\.(?:webp|WEBP)$ {
        try_files $1.webp $1.jpg $1.jpeg;
        image_filter_buffer 20M;
        image_filter crop $w $h;
        image_filter_interlace on;
        expires max;

        break;
    }

    location ~ ^/(?:\d+|-)x(?:\d+|-)(/(static|media)/.*)\.(?:webp|WEBP)$ {
        try_files $1.webp $1.jpg $1.jpeg;
        image_filter_buffer 20M;
        image_filter resize $w $h;
        image_filter_interlace on;
        expires max;

        break;
    }

    location ~ ^/(?:\d+|-)x(?:\d+|-)/crop(/(static|media)/.*)\.(?:jpg|JPG|jpeg|JPEG|gif|GIF|PNG)$ {
        rewrite ^/[\w\d-]+/crop(.*)$ /$1;
        image_filter_buffer 20M;
        image_filter crop $w $h;
        image_filter_interlace on;
        expires max;

        break;
    }

    location ~ ^/(?:\d+|-)x(?:\d+|-)(/(static|media)/.*)\.(?:jpg|JPG|jpeg|JPEG|gif|GIF|PNG)$ {
        rewrite ^/[\w\d-]+/(.*)$ /$1;
        image_filter_buffer 20M;
        image_filter resize $w $h;
        image_filter_interlace on;
        expires max;

        break;
    }

    location ~ ^(/(static|media)/.*)\.webp$ {
        try_files $1.webp $1.jpg $1.jpeg;
        expires max;
    }
}

proxy_cache_path cache/ keys_zone=auth_cache:10m;
